[{"/Users/Renato/e_commerce/src/index.js":"1","/Users/Renato/e_commerce/src/App.js":"2","/Users/Renato/e_commerce/src/components/Products/Products.jsx":"3","/Users/Renato/e_commerce/src/components/Products/Product/Product.jsx":"4","/Users/Renato/e_commerce/src/components/Products/Product/styles.js":"5","/Users/Renato/e_commerce/src/components/NavBar/Navbar.jsx":"6","/Users/Renato/e_commerce/src/components/NavBar/styles.js":"7","/Users/Renato/e_commerce/src/components/index.js":"8","/Users/Renato/e_commerce/src/components/Products/styles.js":"9","/Users/Renato/e_commerce/src/lib/commerce.js":"10","/Users/Renato/e_commerce/src/components/Cart/Cart.jsx":"11","/Users/Renato/e_commerce/src/components/Cart/styles.js":"12","/Users/Renato/e_commerce/src/components/Cart/CartItem/CartItem.jsx":"13","/Users/Renato/e_commerce/src/components/Cart/CartItem/styles.js":"14","/Users/Renato/e_commerce/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/Users/Renato/e_commerce/src/components/CheckoutForm/Checkout/styles.jsx":"16","/Users/Renato/e_commerce/src/components/CheckoutForm/AddressForm.jsx":"17","/Users/Renato/e_commerce/src/components/CheckoutForm/PaymentForm.jsx":"18","/Users/Renato/e_commerce/src/components/CheckoutForm/CustomTextField.jsx":"19","/Users/Renato/e_commerce/src/components/CheckoutForm/Review.jsx":"20"},{"size":146,"mtime":1609797073007,"results":"21","hashOfConfig":"22"},{"size":2876,"mtime":1609963299093,"results":"23","hashOfConfig":"22"},{"size":685,"mtime":1609104797104,"results":"24","hashOfConfig":"22"},{"size":1309,"mtime":1609104717896,"results":"25","hashOfConfig":"22"},{"size":384,"mtime":1608834608465,"results":"26","hashOfConfig":"22"},{"size":1371,"mtime":1609280257771,"results":"27","hashOfConfig":"22"},{"size":1565,"mtime":1608837125726,"results":"28","hashOfConfig":"22"},{"size":230,"mtime":1609448378982,"results":"29","hashOfConfig":"22"},{"size":286,"mtime":1608837655150,"results":"30","hashOfConfig":"22"},{"size":125,"mtime":1609104798408,"results":"31","hashOfConfig":"22"},{"size":1852,"mtime":1609446945912,"results":"32","hashOfConfig":"22"},{"size":569,"mtime":1609273660222,"results":"33","hashOfConfig":"22"},{"size":1287,"mtime":1609446947497,"results":"34","hashOfConfig":"22"},{"size":332,"mtime":1609274104185,"results":"35","hashOfConfig":"22"},{"size":3760,"mtime":1610138295794,"results":"36","hashOfConfig":"22"},{"size":1157,"mtime":1609448383586,"results":"37","hashOfConfig":"22"},{"size":5026,"mtime":1610136230147,"results":"38","hashOfConfig":"22"},{"size":2953,"mtime":1610137595176,"results":"39","hashOfConfig":"22"},{"size":456,"mtime":1610135592039,"results":"40","hashOfConfig":"22"},{"size":1028,"mtime":1609803456128,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1bawhkm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/Renato/e_commerce/src/index.js",[],["87","88"],"/Users/Renato/e_commerce/src/App.js",[],"/Users/Renato/e_commerce/src/components/Products/Products.jsx",[],"/Users/Renato/e_commerce/src/components/Products/Product/Product.jsx",[],"/Users/Renato/e_commerce/src/components/Products/Product/styles.js",[],"/Users/Renato/e_commerce/src/components/NavBar/Navbar.jsx",["89","90"],"import React from 'react'; \nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport { Link , useLocation } from 'react-router-dom'\n\nimport logo from '../../assets/store.png';\nimport useStyles from './styles';\n\nconst Navbar = ({ totalItems }) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n\n    return ( \n    <>\n        <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n            <Toolbar>\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\" >\n                    <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image} />\n                    E-Commerce Shop    \n                </Typography>   \n                <div className={classes.grow} /> \n                 {location.pathname === '/' && (\n                <div className={classes.button}>\n                    <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\n                        <Badge badgeContent={totalItems} color=\"secondary\">\n                            <ShoppingCart />\n                        </Badge>\n                    </IconButton>\n                </div> )}\n            </Toolbar> \n        </AppBar>\n    </> \n    );\n}\n \nexport default Navbar;","/Users/Renato/e_commerce/src/components/NavBar/styles.js",[],"/Users/Renato/e_commerce/src/components/index.js",[],"/Users/Renato/e_commerce/src/components/Products/styles.js",[],"/Users/Renato/e_commerce/src/lib/commerce.js",[],"/Users/Renato/e_commerce/src/components/Cart/Cart.jsx",[],"/Users/Renato/e_commerce/src/components/Cart/styles.js",[],"/Users/Renato/e_commerce/src/components/Cart/CartItem/CartItem.jsx",[],"/Users/Renato/e_commerce/src/components/Cart/CartItem/styles.js",[],"/Users/Renato/e_commerce/src/components/CheckoutForm/Checkout/Checkout.jsx",["91"],"import React, { useState, useEffect } from 'react';\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { commerce } from '../../../lib/commerce';\nimport useStyles from './styles';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\n\nconst steps = ['Shipping address', 'Payment details']\n\n\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\n    const [activeStep, setActiveStep] = useState(0);\n    const [checkoutToken, setCheckoutToken] = useState(null);\n    const [shippingData, setShippingData] = useState({});\n    const [isFinished, setIsFinished] = useState(false);\n    const classes = useStyles();\n    const history = useHistory();\n\n    useEffect(() => {\n        const generateToken = async () => {\n            try {\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\n\n                setCheckoutToken(token);\n            } catch (error) {\n                history.push('/');\n            }\n        }\n\n        generateToken();\n    }, [cart]);\n\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n\n    const next = (data) => {\n        setShippingData(data);\n\n        nextStep();\n    }\n\n    const timeout = () => {\n        setTimeout(() => {\n            setIsFinished(true)\n        }, 3000)\n    }\n    \n    let Confirmation = () => order.customer ? (\n        <>\n            <div>\n                <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname} </Typography>\n                <Divider className={classes.divider} />\n                <Typography variant=\"subtitle2\"> Order ref: {order.customer.reference} </Typography>\n            </div>\n            <br />\n            <Button component={Link} to='/' variant=\"outlined\" type=\"Button\"> Back to Home </Button>\n        </>\n    ) : isFinished ? (\n        <>\n            <div>\n                <Typography variant=\"h5\">Thank you for your purchase</Typography>\n                <Divider className={classes.divider} />\n            </div>\n            <br />\n            <Button component={Link} to='/' variant=\"outlined\" type=\"Button\"> Back to Home </Button>\n        </>\n    ) : (\n        <div className={classes.spinner}>\n            <CircularProgress />\n        </div>\n    );\n\n    if(error) {\n        <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} to='/' variant=\"outlined\" type=\"Button\"> Back to Home </Button>\n        </>\n    }\n\n    const Form = () => activeStep === 0 \n    ? <AddressForm checkoutToken={checkoutToken} next={next} />\n     : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout} />\n\n    return ( \n    <>\n    <CssBaseline />\n        <div className={classes.toolbar} />\n        <main className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Typography variant=\"h4\" align=\"center\"> Checkout </Typography>\n                <Stepper activeStep={activeStep} className={classes.stepper}>\n                    {steps.map((step) => (\n                        <Step key={step}>\n                            <StepLabel>{step}</StepLabel>    \n                         </Step>\n                    ))}\n                 </Stepper>\n                 {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />} \n            </Paper>\n        </main>\n    </>\n\n     );\n}\n \nexport default Checkout;\n","/Users/Renato/e_commerce/src/components/CheckoutForm/Checkout/styles.jsx",[],"/Users/Renato/e_commerce/src/components/CheckoutForm/AddressForm.jsx",["92","93"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { commerce } from '../../lib/commerce';\nimport { Link } from 'react-router-dom';\n\nimport FormInput from './CustomTextField'\n\nconst AddressForm = ({ checkoutToken, next }) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n    const methods = useForm();\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }))\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }))\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})`}))\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        \n        console.log(countries)\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    };\n\n    const fetchSubdivisions  = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n\n    };\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region })\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    };\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id)\n    }, []);\n\n    useEffect(() => {\n       if(shippingCountry) fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]);\n\n    useEffect(() => {\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision) \n    }, [shippingSubdivision])\n\n    return (\n         <>\n        <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\n        <FormProvider {...methods}> \n            <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n                <Grid container spacing={3}> \n                    <FormInput name='firstName' label='First name' />\n                    <FormInput name='lastName' label='Last name' />\n                    <FormInput name='address1' label='Address' />\n                    <FormInput name='email' label='Email' />\n                    <FormInput name='city' label='City' />\n                    <FormInput name='zip' label='ZIP/ Postal code' />\n                    <Grid item xs={12} sm={6}>\n                        <InputLabel>Shipping Country</InputLabel>\n                        <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                            {countries.map((country) => (\n                            <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>\n                            ))}\n                        </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <InputLabel>Shipping Subdivision</InputLabel>\n                        <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                            {subdivisions.map((subdivision) => (\n                            <MenuItem key={subdivision.id} value={subdivision.id}>{subdivision.label}</MenuItem>\n                            ))}\n                        </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <InputLabel>Shipping Options</InputLabel>\n                        <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                        {options.map((option) => (\n                            <MenuItem key={option.id} value={option.id}>{option.label}</MenuItem>\n                            ))}\n                        </Select>\n                    </Grid>\n                </Grid>\n                <br />\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}> \n                            <Button component={Link} to=\"/cart\" variant='outlined'>Back to Cart</Button>\n                            <Button type=\"submit\" variant='contained' color='primary'>Next</Button>\n                </div>\n            </form>\n        </FormProvider>\n    </>\n     );\n}\n \nexport default AddressForm;","/Users/Renato/e_commerce/src/components/CheckoutForm/PaymentForm.jsx",[],"/Users/Renato/e_commerce/src/components/CheckoutForm/CustomTextField.jsx",[],"/Users/Renato/e_commerce/src/components/CheckoutForm/Review.jsx",[],["94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":46,"nodeType":"102","messageId":"103","endLine":2,"endColumn":54},{"ruleId":"100","severity":1,"message":"104","line":2,"column":56,"nodeType":"102","messageId":"103","endLine":2,"endColumn":60},{"ruleId":"105","severity":1,"message":"106","line":32,"column":8,"nodeType":"107","endLine":32,"endColumn":14,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":47,"column":8,"nodeType":"107","endLine":47,"endColumn":10,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":55,"column":8,"nodeType":"107","endLine":55,"endColumn":29,"suggestions":"112"},{"ruleId":"96","replacedBy":"113"},{"ruleId":"98","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["119"],["115"],["116"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [cart, history]",{"range":"126","text":"127"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"128","text":"129"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"130","text":"131"},[1167,1173],"[cart, history]",[2105,2107],"[checkoutToken.id]",[2363,2384],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]